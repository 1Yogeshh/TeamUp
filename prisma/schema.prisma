// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




model User {
  userid Int @id @default(autoincrement())
  clerkId String
  username String
  email String
  avatar String
  teamMembers Team[] @relation("teamMembers")
  role String?
  matchplayed Int?
  wonmatch Int
  loses Int?
  tied Int?
  captains Team[]
  mymatches Match[]
  createdTeam Team[] @relation("createdTeam")
}

model Team {
  teamid Int @id @default(autoincrement())
  name String
  punchline String
  logo String
  location String
  members User[] @relation("teamMembers")
  rating Int?
  feedbacks String[]
  captain User @relation(fields: [captainId] , references: [userid])
  captainId Int
  won Int?
  lost Int? 
  tie Int?
  category Sportcategory @relation(fields: [categoryId] , references: [sportcategoryid])
  categoryId Int
  createdmatch Match[]
  joinedMatch Match[] @relation("teamJoinedmatch")
  winningteam Match[] @relation("winningteam")
  loosedMatch Match[] @relation("loosedMatch")
  inviting Invite[]
  teamcode String
  owneredby User @relation("createdTeam" , fields: [ownerid] , references: [userid])
  ownerid Int
}


model Sportcategory {
  sportcategoryid Int @id @default(autoincrement())
  name String
  team Team[]
  match Match[]
}



model Match {
  matchid Int @id @default(autoincrement())
  createdTeam Team @relation(fields: [createdteamId] , references: [teamid])
  createdteamId Int
  Joinedteam Team? @relation("teamJoinedmatch" , fields: [joinedteamid] , references: [teamid])
  joinedteamid Int?
  location String
  time DateTime
  bet Int
  status String
  Category Sportcategory @relation(fields: [matchCategoryId] , references: [sportcategoryid])
  matchCategoryId Int
  winningteam Team? @relation("winningteam" , fields: [winningteamid] , references: [teamid])
  winningteamid Int?
  looserteam Team? @relation("loosedMatch" , fields: [looserteamid] , references: [teamid])
  looserteamid Int?
  invites Invite[]
  owner User @relation(fields: [ownerid] , references: [userid])
  ownerid Int
}


model Invite {
  inviteid Int @id @default(autoincrement())
  message String
  inviteFormatch Match @relation( fields: [inviteformatchid] , references: [matchid])
  InvitingTeam Team @relation(fields: [invitingTeamId] , references: [teamid])
  invitingTeamId Int
  inviteformatchid Int
  
}